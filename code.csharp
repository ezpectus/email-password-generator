using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel.Design;
using System.Drawing;
using System.Net.NetworkInformation;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Threading.Tasks;
using System.Text;
using System.Security.Cryptography;





class Program
{
    // Метод для генерации случайной строки заданной длины
    static string GenerateRandomString(int length, string chars)
    {
        StringBuilder result = new StringBuilder(length);
        byte[] uintBuffer = new byte[sizeof(uint)];

        using (var rng = RandomNumberGenerator.Create())
        {
            while (length-- > 0)
            {
                rng.GetBytes(uintBuffer);
                uint num = BitConverter.ToUInt32(uintBuffer, 0);
                result.Append(chars[(int)(num % (uint)chars.Length)]);
            }
        }

        return result.ToString();
    }

    static void Main()
    {
        Console.Write("Введите количество email и паролей для генерации: ");
        if (!int.TryParse(Console.ReadLine(), out int n) || n <= 0)
        {
            Console.WriteLine("Некорректное значение. Пожалуйста, введите положительное целое число.");
            return;
        }

        const string emailChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        const string passwordChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+";

        for (int i = 1; i <= n; i++)
        {
            // Генерация email
            string emailPrefix = GenerateRandomString(5, emailChars);
            string email = emailPrefix + "@gmail.com";

            // Генерация пароля
            string passwordPrefix = GenerateRandomString(11, passwordChars);
            string password = passwordPrefix + i;

            // Вывод email и пароля
            Console.WriteLine($"Email {i}: {email}");
            Console.WriteLine($"Пароль {i}: {password}");
        }
    }
}
